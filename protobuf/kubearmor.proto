syntax = "proto3";
 
package feeder;

option go_package="github.com/kubearmor/KubeArmor/protobuf";

// Health check
message NonceMessage {
  int32 nonce = 1;
}

// message struct
message Message {
  int64 Timestamp = 1;
  string UpdatedTime = 2;

  string ClusterName = 3;
  string HostName = 4;
  string HostIP = 5;

  string Type = 6;

  string Level = 7;
  string Message = 8;
}

// alert struct
message Alert {
  int64 Timestamp = 1;
  string UpdatedTime = 2;

  string ClusterName = 3;
  string HostName = 4;

  string NamespaceName = 5;
  string PodName = 6;

  string ContainerID = 7;
  string ContainerName = 8;
  string ContainerImage = 9;

  int32 HostPID = 10;
  int32 PPID = 11;
  int32 PID = 12;
  int32 UID = 13;

  string PolicyName = 14;
  string Severity = 15;

  string Tags = 16;
  string Message = 17;

  string Type = 18;
  string Source = 19;
  string Operation = 20;
  string Resource = 21;
  string Data = 22;

  string Action = 23;
  string Result = 24;
}

// log struct
message Log {
  int64 Timestamp = 1;
  string UpdatedTime = 2;

  string ClusterName = 3;
  string HostName = 4;

  string NamespaceName = 5;
  string PodName = 6;

  string ContainerID = 7;
  string ContainerName = 8;
  string ContainerImage = 9;

  int32 HostPID = 10;
  int32 PPID = 11;
  int32 PID = 12;
  int32 UID = 13;

  string Type = 14;
  string Source = 15;
  string Operation = 16;
  string Resource = 17;
  string Data = 18;

  string Result = 19;
}

// request message
message RequestMessage {
  string Filter = 1;
}

// reply message
message ReplyMessage {
  int32 Retval = 1;
}

service LogService {
  rpc HealthCheck(NonceMessage) returns (ReplyMessage);
  rpc WatchMessages(RequestMessage) returns (stream Message);
  rpc WatchAlerts(RequestMessage) returns (stream Alert);
  rpc WatchLogs(RequestMessage) returns (stream Log);
}
